package moviePagination;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class MovieDAO {
	private Connection connection;
	
	public MovieDAO(Connection connection) {
		this.connection = connection;
	}
	
//	public void add(Movie movie) throws SQLException {
//		String sql = "INSERT INTO MOVIES (NAME, DESCRIPTION, YEAR) VALUES (?, ? , ?)";
//		
//		try(PreparedStatement pstm = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)){
//			pstm.setString(1, movie.getName());
//			pstm.setString(2, movie.getDescription());
//			pstm.setInt(3, movie.getYear());
//			
//			pstm.execute();
//			
//			try(ResultSet rst = pstm.getGeneratedKeys()){
//				while(rst.next()){
//					movie.setId(rst.getInt(1));
//				}
//			}
//		}
//	}
	
	public List<Movie> list() throws SQLException{
		List<Movie> movies = new ArrayList<Movie>();
		
		String sql = "SELECT ID, NAME, DESCRIPTION, YEAR FROM MOVIES";
		
		try(PreparedStatement pstm = connection.prepareStatement(sql)){
			pstm.execute();
			try(ResultSet rst = pstm.getResultSet()){
				while(rst.next()) {
					Movie movie =
							new Movie(rst.getInt(1), 
									rst.getString(2), 
									rst.getString(3), 
									rst.getInt(4));
					movies.add(movie);
				}
			}
		}
		return movies;
	}
	
	public List<Movie> pageItems(int numberMovies, int numberPage) throws SQLException{
		
		List<Movie> movies = new ArrayList<Movie>();
		
		int numberTotalMovies = 20;
		
		int numberTotalPages = (int) Math.ceil((double) numberTotalMovies/numberMovies);
		
		int end = numberMovies * numberPage;
		int start = (end - numberMovies) + 1;
		
		if(numberPage > numberTotalPages) {
			System.out.println("Página vazia, tente novamente outra página!");
		}else {
			while(start <= end && start <= numberTotalMovies) {
				System.out.println(start);
				start++;
			}
		}
	
		
		
		String sql = "select * from movies where id in(" + 1 + "," + 2 +");";
		
		try(PreparedStatement pstm = connection.prepareStatement(sql)){
			pstm.execute();
			try(ResultSet rst = pstm.getResultSet()){
				while(rst.next()) {
					Movie movie =
							new Movie(rst.getInt(1), 
									rst.getString(2), 
									rst.getString(3), 
									rst.getInt(4));
					movies.add(movie);
				}
			}
		}
		return movies;
	}
	
}
